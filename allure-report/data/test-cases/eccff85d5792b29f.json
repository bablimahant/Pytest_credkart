{"uid":"eccff85d5792b29f","name":"test_login_ddt_005","fullName":"testCases.test_UsetProfile_DDT.Test_UserProfile_DDT_class#test_login_ddt_005","historyId":"4471b38685028838a771c6c8a5a4a2fa","time":{"start":1705053267011,"stop":1705053267212,"duration":201},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: no such execution context\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00B76EE3+174339]\n\t(No symbol) [0x00AA0A51]\n\t(No symbol) [0x007B6E8A]\n\t(No symbol) [0x007AA05C]\n\t(No symbol) [0x007A8983]\n\t(No symbol) [0x007A8EFD]\n\t(No symbol) [0x007B2807]\n\t(No symbol) [0x007BF4F4]\n\t(No symbol) [0x007C2676]\n\t(No symbol) [0x007A93BB]\n\t(No symbol) [0x007BF22D]\n\t(No symbol) [0x0081A05B]\n\t(No symbol) [0x00806DA6]\n\t(No symbol) [0x007E1034]\n\t(No symbol) [0x007E1F8D]\n\tGetHandleVerifier [0x00C14B1C+820540]\n\tsqlite3_dbdata_init [0x00CD53EE+653550]\n\tsqlite3_dbdata_init [0x00CD4E09+652041]\n\tsqlite3_dbdata_init [0x00CC97CC+605388]\n\tsqlite3_dbdata_init [0x00CD5D9B+656027]\n\t(No symbol) [0x00AAFE6C]\n\t(No symbol) [0x00AA83B8]\n\t(No symbol) [0x00AA84DD]\n\t(No symbol) [0x00A95818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","statusTrace":"self = <testCases.test_UsetProfile_DDT.Test_UserProfile_DDT_class object at 0x000002A946BB6A10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbbed8202d18ab5d432ca46acae93772\")>\n\n    def test_login_ddt_005(self, setup):\n        self.driver = setup\n    \n        self.ur = UserProfile_Class(self.driver)\n        self.rows = ExcelFileOperation.rows_count(self.path, 'Sheet1')\n    \n        Result_list = []\n        for r in range(2, self.rows + 1):\n            self.email = ExcelFileOperation.ReadData(self.path, 'Sheet1', r, 1)\n            self.password = ExcelFileOperation.ReadData(self.path, 'Sheet1', r, 2)\n            self.Expected_Result = ExcelFileOperation.ReadData(self.path,'Sheet1', r, 3)\n    \n>           self.driver.get(self.Login_url)\n\ntestCases\\test_UsetProfile_DDT.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002A946BE1250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"no such execution context\",\"message\":\"no such execution context\\\\n  (Sess...dInitThunk [0x759F7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777ABD2B+107]\\\\n\\\\tRtlClearBits [0x777ABCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: no such execution context\nE         (Session info: chrome=120.0.6099.217)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00B76EE3+174339]\nE       \t(No symbol) [0x00AA0A51]\nE       \t(No symbol) [0x007B6E8A]\nE       \t(No symbol) [0x007AA05C]\nE       \t(No symbol) [0x007A8983]\nE       \t(No symbol) [0x007A8EFD]\nE       \t(No symbol) [0x007B2807]\nE       \t(No symbol) [0x007BF4F4]\nE       \t(No symbol) [0x007C2676]\nE       \t(No symbol) [0x007A93BB]\nE       \t(No symbol) [0x007BF22D]\nE       \t(No symbol) [0x0081A05B]\nE       \t(No symbol) [0x00806DA6]\nE       \t(No symbol) [0x007E1034]\nE       \t(No symbol) [0x007E1F8D]\nE       \tGetHandleVerifier [0x00C14B1C+820540]\nE       \tsqlite3_dbdata_init [0x00CD53EE+653550]\nE       \tsqlite3_dbdata_init [0x00CD4E09+652041]\nE       \tsqlite3_dbdata_init [0x00CC97CC+605388]\nE       \tsqlite3_dbdata_init [0x00CD5D9B+656027]\nE       \t(No symbol) [0x00AAFE6C]\nE       \t(No symbol) [0x00AA83B8]\nE       \t(No symbol) [0x00AA84DD]\nE       \t(No symbol) [0x00A95818]\nE       \tBaseThreadInitThunk [0x759F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x777ABD2B+107]\nE       \tRtlClearBits [0x777ABCAF+191]\n\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1705053265185,"stop":1705053267011,"duration":1826},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"browser","time":{"start":1705053265185,"stop":1705053265185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: no such execution context\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00B76EE3+174339]\n\t(No symbol) [0x00AA0A51]\n\t(No symbol) [0x007B6E8A]\n\t(No symbol) [0x007AA05C]\n\t(No symbol) [0x007A8983]\n\t(No symbol) [0x007A8EFD]\n\t(No symbol) [0x007B2807]\n\t(No symbol) [0x007BF4F4]\n\t(No symbol) [0x007C2676]\n\t(No symbol) [0x007A93BB]\n\t(No symbol) [0x007BF22D]\n\t(No symbol) [0x0081A05B]\n\t(No symbol) [0x00806DA6]\n\t(No symbol) [0x007E1034]\n\t(No symbol) [0x007E1F8D]\n\tGetHandleVerifier [0x00C14B1C+820540]\n\tsqlite3_dbdata_init [0x00CD53EE+653550]\n\tsqlite3_dbdata_init [0x00CD4E09+652041]\n\tsqlite3_dbdata_init [0x00CC97CC+605388]\n\tsqlite3_dbdata_init [0x00CD5D9B+656027]\n\t(No symbol) [0x00AAFE6C]\n\t(No symbol) [0x00AA83B8]\n\t(No symbol) [0x00AA84DD]\n\t(No symbol) [0x00A95818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","statusTrace":"self = <testCases.test_UsetProfile_DDT.Test_UserProfile_DDT_class object at 0x000002A946BB6A10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbbed8202d18ab5d432ca46acae93772\")>\n\n    def test_login_ddt_005(self, setup):\n        self.driver = setup\n    \n        self.ur = UserProfile_Class(self.driver)\n        self.rows = ExcelFileOperation.rows_count(self.path, 'Sheet1')\n    \n        Result_list = []\n        for r in range(2, self.rows + 1):\n            self.email = ExcelFileOperation.ReadData(self.path, 'Sheet1', r, 1)\n            self.password = ExcelFileOperation.ReadData(self.path, 'Sheet1', r, 2)\n            self.Expected_Result = ExcelFileOperation.ReadData(self.path,'Sheet1', r, 3)\n    \n>           self.driver.get(self.Login_url)\n\ntestCases\\test_UsetProfile_DDT.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002A946BE1250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"no such execution context\",\"message\":\"no such execution context\\\\n  (Sess...dInitThunk [0x759F7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777ABD2B+107]\\\\n\\\\tRtlClearBits [0x777ABCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: no such execution context\nE         (Session info: chrome=120.0.6099.217)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00B76EE3+174339]\nE       \t(No symbol) [0x00AA0A51]\nE       \t(No symbol) [0x007B6E8A]\nE       \t(No symbol) [0x007AA05C]\nE       \t(No symbol) [0x007A8983]\nE       \t(No symbol) [0x007A8EFD]\nE       \t(No symbol) [0x007B2807]\nE       \t(No symbol) [0x007BF4F4]\nE       \t(No symbol) [0x007C2676]\nE       \t(No symbol) [0x007A93BB]\nE       \t(No symbol) [0x007BF22D]\nE       \t(No symbol) [0x0081A05B]\nE       \t(No symbol) [0x00806DA6]\nE       \t(No symbol) [0x007E1034]\nE       \t(No symbol) [0x007E1F8D]\nE       \tGetHandleVerifier [0x00C14B1C+820540]\nE       \tsqlite3_dbdata_init [0x00CD53EE+653550]\nE       \tsqlite3_dbdata_init [0x00CD4E09+652041]\nE       \tsqlite3_dbdata_init [0x00CC97CC+605388]\nE       \tsqlite3_dbdata_init [0x00CD5D9B+656027]\nE       \t(No symbol) [0x00AAFE6C]\nE       \t(No symbol) [0x00AA83B8]\nE       \t(No symbol) [0x00AA84DD]\nE       \t(No symbol) [0x00A95818]\nE       \tBaseThreadInitThunk [0x759F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x777ABD2B+107]\nE       \tRtlClearBits [0x777ABCAF+191]\n\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException","steps":[],"attachments":[{"uid":"a1c194b12556a45","name":"stdout","source":"a1c194b12556a45.txt","type":"text/plain","size":25}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"setup::0","time":{"start":1705053267270,"stop":1705053271153,"duration":3883},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_UsetProfile_DDT"},{"name":"subSuite","value":"Test_UserProfile_DDT_class"},{"name":"host","value":"Sonu"},{"name":"thread","value":"21052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_UsetProfile_DDT"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"eccff85d5792b29f.json","parameterValues":[]}