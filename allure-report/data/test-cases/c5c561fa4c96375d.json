{"uid":"c5c561fa4c96375d","name":"test_user_login_004[getDataForLogin1]","fullName":"testCases.test_userprofile_params.Test_UserProfile#test_user_login_004","historyId":"382414ea98700468abfbc14acef13d72","time":{"start":1705053919707,"stop":1705053925167,"duration":5460},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_userprofile_params.Test_UserProfile object at 0x000001CDFAF1CA50>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1d14478993300e4bacd16afe81dc45df\")>\ngetDataForLogin = ('tester4@gmail.com1', 'tester123', 'Fail')\n\n    def test_user_login_004(self, setup, getDataForLogin):\n        self.driver = setup\n        self.log.info(\"*** opening browser ***\")\n        self.ur = UserProfile_Class(self.driver)\n        self.log.info(\"test_user_login_004 is started\")\n        self.driver.get(self.Login_url)\n        self.log.info(\"go to url\")\n        self.ur.Enter_Email(getDataForLogin[0])\n        self.log.info(\"enter email\")\n        self.ur.Enter_Password(getDataForLogin[1])\n        self.log.info(\"enter password\")\n        self.ur.Click_login_or_Register_button()\n        self.log.info(\"click on login button\")\n    \n        if self.ur.Validation_login_or_Registration() == \"Registration or login  pass\":\n            self.log.info(\"test_user_login_004 is pass\")\n            if getDataForLogin[2] == \"Pass\":\n                self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n            assert True\n        elif getDataForLogin[2] == \"Fail\":\n            self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n>           assert False\nE           assert False\n\ntestCases\\test_userprofile_params.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1705053916787,"stop":1705053916787,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup","time":{"start":1705053916787,"stop":1705053919705,"duration":2918},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"getDataForLogin","time":{"start":1705053919705,"stop":1705053919706,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_userprofile_params.Test_UserProfile object at 0x000001CDFAF1CA50>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1d14478993300e4bacd16afe81dc45df\")>\ngetDataForLogin = ('tester4@gmail.com1', 'tester123', 'Fail')\n\n    def test_user_login_004(self, setup, getDataForLogin):\n        self.driver = setup\n        self.log.info(\"*** opening browser ***\")\n        self.ur = UserProfile_Class(self.driver)\n        self.log.info(\"test_user_login_004 is started\")\n        self.driver.get(self.Login_url)\n        self.log.info(\"go to url\")\n        self.ur.Enter_Email(getDataForLogin[0])\n        self.log.info(\"enter email\")\n        self.ur.Enter_Password(getDataForLogin[1])\n        self.log.info(\"enter password\")\n        self.ur.Click_login_or_Register_button()\n        self.log.info(\"click on login button\")\n    \n        if self.ur.Validation_login_or_Registration() == \"Registration or login  pass\":\n            self.log.info(\"test_user_login_004 is pass\")\n            if getDataForLogin[2] == \"Pass\":\n                self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n            assert True\n        elif getDataForLogin[2] == \"Fail\":\n            self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n>           assert False\nE           assert False\n\ntestCases\\test_userprofile_params.py:76: AssertionError","steps":[],"attachments":[{"uid":"abc3917490cd674","name":"log","source":"abc3917490cd674.txt","type":"text/plain","size":503},{"uid":"d76990b0d2182bc9","name":"stdout","source":"d76990b0d2182bc9.txt","type":"text/plain","size":53},{"uid":"6cf742e83d7417b9","name":"stderr","source":"6cf742e83d7417b9.txt","type":"text/plain","size":94524}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"setup::0","time":{"start":1705053925189,"stop":1705053927472,"duration":2283},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_userprofile_params"},{"name":"subSuite","value":"Test_UserProfile"},{"name":"host","value":"Sonu"},{"name":"thread","value":"14816-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_userprofile_params"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"getDataForLogin","value":"('tester4@gmail.com1', 'tester123', 'Fail')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"faaf2fe53b71ed3a","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705053267517,"stop":1705053273283,"duration":5766}},{"uid":"8ba475254d1aeec7","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705001938609,"stop":1705001942308,"duration":3699}},{"uid":"fd2955d1e6d52bc8","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705001427456,"stop":1705001430958,"duration":3502}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"2babc7c7105cd886","reportUrl":"http://localhost:9191/job/Pytest_credkart_1/5/allure/#testresult/2babc7c7105cd886","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705053919707,"stop":1705053925167,"duration":5460}},{"uid":"a8d7ce715a875b31","reportUrl":"http://localhost:9191/job/Pytest_credkart_1/4/allure/#testresult/a8d7ce715a875b31","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705053919707,"stop":1705053925167,"duration":5460}}]},"tags":[]},"source":"c5c561fa4c96375d.json","parameterValues":["('tester4@gmail.com1', 'tester123', 'Fail')"]}