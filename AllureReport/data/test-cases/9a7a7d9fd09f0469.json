{"uid":"9a7a7d9fd09f0469","name":"test_user_login_004[getDataForLogin3]","fullName":"testCases.test_userprofile_params.Test_UserProfile#test_user_login_004","historyId":"fcb36f4326764f34f426eca7880008ce","time":{"start":1705053940999,"stop":1705053943924,"duration":2925},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_userprofile_params.Test_UserProfile object at 0x000002619BF2DE10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4fa5b3ca75fee6ea7585623316e2e3c\")>\ngetDataForLogin = ('tester4@gmail.com1', 'tester1234', 'Fail')\n\n    def test_user_login_004(self, setup, getDataForLogin):\n        self.driver = setup\n        self.log.info(\"*** opening browser ***\")\n        self.ur = UserProfile_Class(self.driver)\n        self.log.info(\"test_user_login_004 is started\")\n        self.driver.get(self.Login_url)\n        self.log.info(\"go to url\")\n        self.ur.Enter_Email(getDataForLogin[0])\n        self.log.info(\"enter email\")\n        self.ur.Enter_Password(getDataForLogin[1])\n        self.log.info(\"enter password\")\n        self.ur.Click_login_or_Register_button()\n        self.log.info(\"click on login button\")\n    \n        if self.ur.Validation_login_or_Registration() == \"Registration or login  pass\":\n            self.log.info(\"test_user_login_004 is pass\")\n            if getDataForLogin[2] == \"Pass\":\n                self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n            assert True\n        elif getDataForLogin[2] == \"Fail\":\n            self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n>           assert False\nE           assert False\n\ntestCases\\test_userprofile_params.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1705053938864,"stop":1705053938864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705053938864,"stop":1705053940999,"duration":2135},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"getDataForLogin","time":{"start":1705053940999,"stop":1705053940999,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_userprofile_params.Test_UserProfile object at 0x000002619BF2DE10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4fa5b3ca75fee6ea7585623316e2e3c\")>\ngetDataForLogin = ('tester4@gmail.com1', 'tester1234', 'Fail')\n\n    def test_user_login_004(self, setup, getDataForLogin):\n        self.driver = setup\n        self.log.info(\"*** opening browser ***\")\n        self.ur = UserProfile_Class(self.driver)\n        self.log.info(\"test_user_login_004 is started\")\n        self.driver.get(self.Login_url)\n        self.log.info(\"go to url\")\n        self.ur.Enter_Email(getDataForLogin[0])\n        self.log.info(\"enter email\")\n        self.ur.Enter_Password(getDataForLogin[1])\n        self.log.info(\"enter password\")\n        self.ur.Click_login_or_Register_button()\n        self.log.info(\"click on login button\")\n    \n        if self.ur.Validation_login_or_Registration() == \"Registration or login  pass\":\n            self.log.info(\"test_user_login_004 is pass\")\n            if getDataForLogin[2] == \"Pass\":\n                self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n            assert True\n        elif getDataForLogin[2] == \"Fail\":\n            self.driver.save_screenshot(\n                \"C:\\\\Babli\\\\python_revision_2\\\\Pytest_python_projects\\\\Pytest_credkart_project\\\\Screenshots\\\\Login_pass.png\"\n            )\n>           assert False\nE           assert False\n\ntestCases\\test_userprofile_params.py:76: AssertionError","steps":[],"attachments":[{"uid":"e5012926a0637cde","name":"log","source":"e5012926a0637cde.txt","type":"text/plain","size":503},{"uid":"83e2d5220275293b","name":"stdout","source":"83e2d5220275293b.txt","type":"text/plain","size":53},{"uid":"622b6fec1d2c3f9b","name":"stderr","source":"622b6fec1d2c3f9b.txt","type":"text/plain","size":94524}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705053943940,"stop":1705053946145,"duration":2205},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_userprofile_params"},{"name":"subSuite","value":"Test_UserProfile"},{"name":"host","value":"Sonu"},{"name":"thread","value":"10028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_userprofile_params"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"getDataForLogin","value":"('tester4@gmail.com1', 'tester1234', 'Fail')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ad7268d1a5ac711","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705053285759,"stop":1705053288736,"duration":2977}},{"uid":"115995f1ac3fc094","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705001932141,"stop":1705001935361,"duration":3220}},{"uid":"f5c63b7d0d5b5ffd","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705001423301,"stop":1705001426312,"duration":3011}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"2f29e61179fae484","reportUrl":"http://localhost:9191/job/Pytest_credkart_1/5/allure/#testresult/2f29e61179fae484","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705053940999,"stop":1705053943924,"duration":2925}},{"uid":"31491f7eafe77a8b","reportUrl":"http://localhost:9191/job/Pytest_credkart_1/4/allure/#testresult/31491f7eafe77a8b","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1705053940999,"stop":1705053943924,"duration":2925}}]},"tags":[]},"source":"9a7a7d9fd09f0469.json","parameterValues":["('tester4@gmail.com1', 'tester1234', 'Fail')"]}