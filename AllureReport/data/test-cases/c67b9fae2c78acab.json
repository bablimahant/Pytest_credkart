{"uid":"c67b9fae2c78acab","name":"test_registration_001","fullName":"testCases.test_UserProfile.Test_UserProfile#test_registration_001","historyId":"587cd1add88feef010b1c33acaafac8f","time":{"start":1705055066090,"stop":1705055068942,"duration":2852},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00906EE3+174339]\n\t(No symbol) [0x00830A51]\n\t(No symbol) [0x00546FF6]\n\t(No symbol) [0x00579876]\n\t(No symbol) [0x00579C2C]\n\t(No symbol) [0x005ABD42]\n\t(No symbol) [0x00597054]\n\t(No symbol) [0x005AA104]\n\t(No symbol) [0x00596DA6]\n\t(No symbol) [0x00571034]\n\t(No symbol) [0x00571F8D]\n\tGetHandleVerifier [0x009A4B1C+820540]\n\tsqlite3_dbdata_init [0x00A653EE+653550]\n\tsqlite3_dbdata_init [0x00A64E09+652041]\n\tsqlite3_dbdata_init [0x00A597CC+605388]\n\tsqlite3_dbdata_init [0x00A65D9B+656027]\n\t(No symbol) [0x0083FE6C]\n\t(No symbol) [0x008383B8]\n\t(No symbol) [0x008384DD]\n\t(No symbol) [0x00825818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","statusTrace":"self = <testCases.test_UserProfile.Test_UserProfile object at 0x0000021F65961750>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4e849e5a4793e7d29da58319a37047f1\")>\n\n    @pytest.mark.sanity\n    def test_registration_001(self, setup):\n        self.driver = setup\n        self.log.info(\"*** opening browser***\")\n    \n        # self.driver = webdriver.Chrome()\n        # self.driver.maximize_window()\n        self.ur = UserProfile_Class(self.driver)\n        self.log.info(\"*** test_registration_001 is started***\")\n    \n        self.driver.get(self. Registration_url)\n        self.log.info(\"Go to url--> \" + self. Registration_url)\n        self.ur.Enter_Name(self.Name)\n    \n        #email = generate_email()\n        self.ur.Enter_Email(self.Username)\n        #print(email)\n    \n        self.log.info(\"enter email \")\n        self.ur.Enter_Password(self.Password)\n        self.log.info(\"password \")\n        self.ur.Enter_ConfirmPassword(self.Password)\n>       self.ur.Click_login_or_Register_button()\n\ntestCases\\test_UserProfile.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\UserProfilePage.py:31: in Click_login_or_Register_button\n    self.driver.find_element(*UserProfile_Class.Click_login_or_Register_XPATH).click()\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021F65DF1950>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x759F7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777ABD2B+107]\\\\n\\\\tRtlClearBits [0x777ABCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\nE         (Session info: chrome=120.0.6099.217)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00906EE3+174339]\nE       \t(No symbol) [0x00830A51]\nE       \t(No symbol) [0x00546FF6]\nE       \t(No symbol) [0x00579876]\nE       \t(No symbol) [0x00579C2C]\nE       \t(No symbol) [0x005ABD42]\nE       \t(No symbol) [0x00597054]\nE       \t(No symbol) [0x005AA104]\nE       \t(No symbol) [0x00596DA6]\nE       \t(No symbol) [0x00571034]\nE       \t(No symbol) [0x00571F8D]\nE       \tGetHandleVerifier [0x009A4B1C+820540]\nE       \tsqlite3_dbdata_init [0x00A653EE+653550]\nE       \tsqlite3_dbdata_init [0x00A64E09+652041]\nE       \tsqlite3_dbdata_init [0x00A597CC+605388]\nE       \tsqlite3_dbdata_init [0x00A65D9B+656027]\nE       \t(No symbol) [0x0083FE6C]\nE       \t(No symbol) [0x008383B8]\nE       \t(No symbol) [0x008384DD]\nE       \t(No symbol) [0x00825818]\nE       \tBaseThreadInitThunk [0x759F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x777ABD2B+107]\nE       \tRtlClearBits [0x777ABCAF+191]\n\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1705055063116,"stop":1705055066090,"duration":2974},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1705055063116,"stop":1705055063116,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00906EE3+174339]\n\t(No symbol) [0x00830A51]\n\t(No symbol) [0x00546FF6]\n\t(No symbol) [0x00579876]\n\t(No symbol) [0x00579C2C]\n\t(No symbol) [0x005ABD42]\n\t(No symbol) [0x00597054]\n\t(No symbol) [0x005AA104]\n\t(No symbol) [0x00596DA6]\n\t(No symbol) [0x00571034]\n\t(No symbol) [0x00571F8D]\n\tGetHandleVerifier [0x009A4B1C+820540]\n\tsqlite3_dbdata_init [0x00A653EE+653550]\n\tsqlite3_dbdata_init [0x00A64E09+652041]\n\tsqlite3_dbdata_init [0x00A597CC+605388]\n\tsqlite3_dbdata_init [0x00A65D9B+656027]\n\t(No symbol) [0x0083FE6C]\n\t(No symbol) [0x008383B8]\n\t(No symbol) [0x008384DD]\n\t(No symbol) [0x00825818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","statusTrace":"self = <testCases.test_UserProfile.Test_UserProfile object at 0x0000021F65961750>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4e849e5a4793e7d29da58319a37047f1\")>\n\n    @pytest.mark.sanity\n    def test_registration_001(self, setup):\n        self.driver = setup\n        self.log.info(\"*** opening browser***\")\n    \n        # self.driver = webdriver.Chrome()\n        # self.driver.maximize_window()\n        self.ur = UserProfile_Class(self.driver)\n        self.log.info(\"*** test_registration_001 is started***\")\n    \n        self.driver.get(self. Registration_url)\n        self.log.info(\"Go to url--> \" + self. Registration_url)\n        self.ur.Enter_Name(self.Name)\n    \n        #email = generate_email()\n        self.ur.Enter_Email(self.Username)\n        #print(email)\n    \n        self.log.info(\"enter email \")\n        self.ur.Enter_Password(self.Password)\n        self.log.info(\"password \")\n        self.ur.Enter_ConfirmPassword(self.Password)\n>       self.ur.Click_login_or_Register_button()\n\ntestCases\\test_UserProfile.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\UserProfilePage.py:31: in Click_login_or_Register_button\n    self.driver.find_element(*UserProfile_Class.Click_login_or_Register_XPATH).click()\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021F65DF1950>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x759F7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777ABD2B+107]\\\\n\\\\tRtlClearBits [0x777ABCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\nE         (Session info: chrome=120.0.6099.217)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00906EE3+174339]\nE       \t(No symbol) [0x00830A51]\nE       \t(No symbol) [0x00546FF6]\nE       \t(No symbol) [0x00579876]\nE       \t(No symbol) [0x00579C2C]\nE       \t(No symbol) [0x005ABD42]\nE       \t(No symbol) [0x00597054]\nE       \t(No symbol) [0x005AA104]\nE       \t(No symbol) [0x00596DA6]\nE       \t(No symbol) [0x00571034]\nE       \t(No symbol) [0x00571F8D]\nE       \tGetHandleVerifier [0x009A4B1C+820540]\nE       \tsqlite3_dbdata_init [0x00A653EE+653550]\nE       \tsqlite3_dbdata_init [0x00A64E09+652041]\nE       \tsqlite3_dbdata_init [0x00A597CC+605388]\nE       \tsqlite3_dbdata_init [0x00A65D9B+656027]\nE       \t(No symbol) [0x0083FE6C]\nE       \t(No symbol) [0x008383B8]\nE       \t(No symbol) [0x008384DD]\nE       \t(No symbol) [0x00825818]\nE       \tBaseThreadInitThunk [0x759F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x777ABD2B+107]\nE       \tRtlClearBits [0x777ABCAF+191]\n\nC:\\Users\\pramo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"5f569e54aed7d606","name":"log","source":"5f569e54aed7d606.txt","type":"text/plain","size":382},{"uid":"2935a7b9f000b9f","name":"stdout","source":"2935a7b9f000b9f.txt","type":"text/plain","size":25},{"uid":"9d9633812d11baaf","name":"stderr","source":"9d9633812d11baaf.txt","type":"text/plain","size":70808}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705055068991,"stop":1705055071615,"duration":2624},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"sanity"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_UserProfile"},{"name":"subSuite","value":"Test_UserProfile"},{"name":"host","value":"Sonu"},{"name":"thread","value":"23392-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_UserProfile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"891a8b479cf0f101","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00C19876]\n\t(No symbol) [0x00C19C2C]\n\t(No symbol) [0x00C4BD42]\n\t(No symbol) [0x00C37054]\n\t(No symbol) [0x00C4A104]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","time":{"start":1705053919560,"stop":1705053923588,"duration":4028}},{"uid":"749d72feb7e0829b","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00B76EE3+174339]\n\t(No symbol) [0x00AA0A51]\n\t(No symbol) [0x007B6FF6]\n\t(No symbol) [0x007E9876]\n\t(No symbol) [0x007E9C2C]\n\t(No symbol) [0x0081BD42]\n\t(No symbol) [0x00807054]\n\t(No symbol) [0x0081A104]\n\t(No symbol) [0x00806DA6]\n\t(No symbol) [0x007E1034]\n\t(No symbol) [0x007E1F8D]\n\tGetHandleVerifier [0x00C14B1C+820540]\n\tsqlite3_dbdata_init [0x00CD53EE+653550]\n\tsqlite3_dbdata_init [0x00CD4E09+652041]\n\tsqlite3_dbdata_init [0x00CC97CC+605388]\n\tsqlite3_dbdata_init [0x00CD5D9B+656027]\n\t(No symbol) [0x00AAFE6C]\n\t(No symbol) [0x00AA83B8]\n\t(No symbol) [0x00AA84DD]\n\t(No symbol) [0x00A95818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","time":{"start":1705053267576,"stop":1705053269648,"duration":2072}},{"uid":"79d5a6a3df2d026c","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.216)\nStacktrace:\n\tGetHandleVerifier [0x011A6EE3+174339]\n\t(No symbol) [0x010D0A51]\n\t(No symbol) [0x00DE6FF6]\n\t(No symbol) [0x00E19876]\n\t(No symbol) [0x00E19C2C]\n\t(No symbol) [0x00E4BD42]\n\t(No symbol) [0x00E37054]\n\t(No symbol) [0x00E4A104]\n\t(No symbol) [0x00E36DA6]\n\t(No symbol) [0x00E11034]\n\t(No symbol) [0x00E11F8D]\n\tGetHandleVerifier [0x01244B1C+820540]\n\tsqlite3_dbdata_init [0x013053EE+653550]\n\tsqlite3_dbdata_init [0x01304E09+652041]\n\tsqlite3_dbdata_init [0x012F97CC+605388]\n\tsqlite3_dbdata_init [0x01305D9B+656027]\n\t(No symbol) [0x010DFE6C]\n\t(No symbol) [0x010D83B8]\n\t(No symbol) [0x010D84DD]\n\t(No symbol) [0x010C5818]\n\tBaseThreadInitThunk [0x77007BA9+25]\n\tRtlInitializeExceptionChain [0x77A4BD2B+107]\n\tRtlClearBits [0x77A4BCAF+191]","time":{"start":1705001923567,"stop":1705001926401,"duration":2834}},{"uid":"cccae9bf15147f50","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.216)\nStacktrace:\n\tGetHandleVerifier [0x011A6EE3+174339]\n\t(No symbol) [0x010D0A51]\n\t(No symbol) [0x00DE6FF6]\n\t(No symbol) [0x00E19876]\n\t(No symbol) [0x00E19C2C]\n\t(No symbol) [0x00E4BD42]\n\t(No symbol) [0x00E37054]\n\t(No symbol) [0x00E4A104]\n\t(No symbol) [0x00E36DA6]\n\t(No symbol) [0x00E11034]\n\t(No symbol) [0x00E11F8D]\n\tGetHandleVerifier [0x01244B1C+820540]\n\tsqlite3_dbdata_init [0x013053EE+653550]\n\tsqlite3_dbdata_init [0x01304E09+652041]\n\tsqlite3_dbdata_init [0x012F97CC+605388]\n\tsqlite3_dbdata_init [0x01305D9B+656027]\n\t(No symbol) [0x010DFE6C]\n\t(No symbol) [0x010D83B8]\n\t(No symbol) [0x010D84DD]\n\t(No symbol) [0x010C5818]\n\tBaseThreadInitThunk [0x77007BA9+25]\n\tRtlInitializeExceptionChain [0x77A4BD2B+107]\n\tRtlClearBits [0x77A4BCAF+191]","time":{"start":1705001414870,"stop":1705001417642,"duration":2772}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"5f4c69d710298a6d","reportUrl":"http://localhost:9191/job/Pytest_credkart_1/5/allure/#testresult/5f4c69d710298a6d","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00906EE3+174339]\n\t(No symbol) [0x00830A51]\n\t(No symbol) [0x00546FF6]\n\t(No symbol) [0x00579876]\n\t(No symbol) [0x00579C2C]\n\t(No symbol) [0x005ABD42]\n\t(No symbol) [0x00597054]\n\t(No symbol) [0x005AA104]\n\t(No symbol) [0x00596DA6]\n\t(No symbol) [0x00571034]\n\t(No symbol) [0x00571F8D]\n\tGetHandleVerifier [0x009A4B1C+820540]\n\tsqlite3_dbdata_init [0x00A653EE+653550]\n\tsqlite3_dbdata_init [0x00A64E09+652041]\n\tsqlite3_dbdata_init [0x00A597CC+605388]\n\tsqlite3_dbdata_init [0x00A65D9B+656027]\n\t(No symbol) [0x0083FE6C]\n\t(No symbol) [0x008383B8]\n\t(No symbol) [0x008384DD]\n\t(No symbol) [0x00825818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","time":{"start":1705055066090,"stop":1705055068942,"duration":2852}},{"uid":"182771c917a1cf56","reportUrl":"http://localhost:9191/job/Pytest_credkart_1/4/allure/#testresult/182771c917a1cf56","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[normalize-space()='Login']\"}\n  (Session info: chrome=120.0.6099.217)\nStacktrace:\n\tGetHandleVerifier [0x00906EE3+174339]\n\t(No symbol) [0x00830A51]\n\t(No symbol) [0x00546FF6]\n\t(No symbol) [0x00579876]\n\t(No symbol) [0x00579C2C]\n\t(No symbol) [0x005ABD42]\n\t(No symbol) [0x00597054]\n\t(No symbol) [0x005AA104]\n\t(No symbol) [0x00596DA6]\n\t(No symbol) [0x00571034]\n\t(No symbol) [0x00571F8D]\n\tGetHandleVerifier [0x009A4B1C+820540]\n\tsqlite3_dbdata_init [0x00A653EE+653550]\n\tsqlite3_dbdata_init [0x00A64E09+652041]\n\tsqlite3_dbdata_init [0x00A597CC+605388]\n\tsqlite3_dbdata_init [0x00A65D9B+656027]\n\t(No symbol) [0x0083FE6C]\n\t(No symbol) [0x008383B8]\n\t(No symbol) [0x008384DD]\n\t(No symbol) [0x00825818]\n\tBaseThreadInitThunk [0x759F7BA9+25]\n\tRtlInitializeExceptionChain [0x777ABD2B+107]\n\tRtlClearBits [0x777ABCAF+191]","time":{"start":1705055066090,"stop":1705055068942,"duration":2852}}]},"tags":["sanity"]},"source":"c67b9fae2c78acab.json","parameterValues":[]}